// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc199.KevinTrainingRobot.subsystems;

import org.usfirst.frc199.KevinTrainingRobot.Robot;
import org.usfirst.frc199.KevinTrainingRobot.RobotMap;
import org.usfirst.frc199.KevinTrainingRobot.commands.*;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Drivetrain extends Subsystem implements DrivetrainInterface{
	
    private final SpeedController leftMotor = RobotMap.drivetrainLeftMotor;
    private final SpeedController rightMotor = RobotMap.drivetrainRightMotor;
    private final Encoder leftEncoder = RobotMap.drivetrainLeftEncoder;
    private final Encoder rightEncoder = RobotMap.drivetrainRightEncoder;
    private final AnalogGyro gyro = RobotMap.drivetrainGyro;
    
    // enum DriveTypes can be either arcade or tank
    private DriveTypes currentDrive = DriveTypes.ARCADE; 


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
    		setDefaultCommand(new TeleopDrive());
    }

    /**
     * Toggles the drivetype between arcade and tank
     */
	@Override
	public void toggleDriveType() {
		if (currentDrive == DriveTypes.ARCADE) 
			currentDrive = DriveTypes.TANK;
		else if (currentDrive == DriveTypes.TANK)
			currentDrive = DriveTypes.ARCADE;
	}
    
    public void drive () {
    		if (currentDrive == DriveTypes.ARCADE) {
    			double speed = Robot.oi.leftJoystick.getY();
    			double turn = Robot.oi.rightJoystick.getX();
    			
    			RobotMap.robotDrive.arcadeDrive(speed, turn);
    		} else if (currentDrive == DriveTypes.TANK) {
    			double left = Robot.oi.leftJoystick.getY();
    			double right = Robot.oi.rightJoystick.getY();
    			
    			RobotMap.robotDrive.tankDrive(left, right);
    		}
    }
 }

